
---
  flow-definitions:
    - name: 'bayesianAnalysisFlow'
      queue: '{DEPLOYMENT_PREFIX}_bayesianAnalysisFlow_v0'
      # we will not wait for recursive analyses
      nowait:
       - 'bayesianFlow'
      #sampling:
      #  name: 'biexponential_decrease'
      #  args:
      #    start_retry: 30
      #    stop_retry: 5
      edges:
        - from:
          to:
            - 'security_issues'
        - from:
          to:
            - 'static_analysis'
          condition:
            name: 'alwaysFalse'
        - from:
          to:
            - 'crypto_algorithms'
          condition:
            name: 'alwaysFalse'
        - from:
          to:
            - 'code_metrics'
        - from:
          to:
            - 'source_licenses'
        - from:
          to:
            - 'binary_data'
          condition:
            name: 'alwaysFalse'
        - from:
          to:
            - 'metadata'
        - from:
          to:
            - 'digests'
        - from:
          to:
            - 'languages'
          condition:
            name: 'alwaysFalse'
        - from: 'metadata'
          to:
            - 'github_details'
            - 'GitReadmeCollectorTask'
          condition:
            name: 'isGhRepo'
            node: 'metadata'
            args:
              key:
                - 'details'
                - 0
                - 'code_repository'
                - 'url'
        - from: 'metadata'
          to: 'dependency_snapshot'
        - from: 'dependency_snapshot'
          to: 'bayesianFlow'
          foreach:
            import: 'cucoslib.dispatcher.foreach'
            function: 'iter_dependencies_analysis'
            # result of the function is used as sub-flow arguments
            propagate_result: true
        - from:
            - 'digests'
            - 'metadata'
          to: 'anitya'
        - from:
            - 'anitya'
            - 'digests'
          to: 'redhat_downstream'
          condition:
            or:
              - name: 'envEqual'
                args:
                  env: 'OPENSHIFT_DEPLOYMENT'
                  value: '0'
              - name: 'argsFieldEqual'
                args:
                  key: 'ecosystem'
                  value: 'maven'
        - from:
          to: 'blackduck_executor'
          condition:
            name: 'alwaysFalse'
          #condition:
          #  or:
          #    - name: 'argsFieldEqual'
          #      args:
          #        key: 'ecosystem'
          #        value: 'npm'
          #    - name: 'argsFieldEqual'
          #      args:
          #        key: 'ecosystem'
          #        value: 'maven'
        - from: 'blackduck_executor'
          to: 'blackduck'
